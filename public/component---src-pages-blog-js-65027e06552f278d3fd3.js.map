{"version":3,"file":"component---src-pages-blog-js-65027e06552f278d3fd3.js","mappings":"2KA2BA,IAtBiB,SAAAA,GAAgB,IACzBC,EADiBD,EAALE,MACKC,KAAI,SAAAC,GAAmD,IAAhDC,EAAWD,EAAXC,YAAaC,EAAMF,EAANE,OAAQC,EAAOH,EAAPG,QAASC,EAAUJ,EAAVI,WAClDC,EAAmCJ,EAAnCI,MAAOC,EAA4BL,EAA5BK,KAAMC,EAAsBN,EAAtBM,KAAMC,EAAgBP,EAAhBO,YACnBC,EAASP,EAATO,KAER,OACEC,EAAAA,cAACC,EAAY,CACXC,IAAKH,EACLH,KAAMA,EACND,MAAOA,EACPE,KAAMA,EACNE,KAAMA,EACNL,WAAYA,EACZI,YAAaA,EACbL,QAASA,GAGf,IAEA,OAAOO,EAAAA,cAACG,EAAc,KAAEhB,EAC1B,EAIA,IAAMc,EAAe,SAAHG,GAQX,IAPLT,EAAKS,EAALT,MACAE,EAAIO,EAAJP,KACAH,EAAUU,EAAVV,WACAE,EAAIQ,EAAJR,KACAH,EAAOW,EAAPX,QACAK,EAAWM,EAAXN,YACAC,EAAIK,EAAJL,KAEA,OACEC,EAAAA,cAACK,EAAkB,KACjBL,EAAAA,cAACM,EAAAA,EAAI,CAACV,KAAMA,IAEZI,EAAAA,cAACO,EAAa,KACZP,EAAAA,cAACQ,EAAAA,KAAI,CAACC,GAAIV,GAAOJ,IAEnBK,EAAAA,cAACU,EAAe,CACdC,wBAAyB,CACvBC,OAAQd,GAAeL,KAG3BO,EAAAA,cAACa,EAAY,KACXb,EAAAA,cAAA,YAAOH,GAEPG,EAAAA,cAAA,YAAON,EAAW,UAI1B,EAEMS,EAAiBW,EAAAA,QAAAA,GAAAA,WAAS,CAAAC,YAAA,4BAAAC,YAAA,eAATF,CAAS,yMAe1BT,EAAqBS,EAAAA,QAAAA,GAAAA,WAAS,CAAAC,YAAA,gCAAAC,YAAA,eAATF,CAAS,4bA8B9BP,EAAgBO,EAAAA,QAAAA,GAAAA,WAAS,CAAAC,YAAA,2BAAAC,YAAA,eAATF,CAAS,4OAuBzBJ,EAAkBI,EAAAA,QAAAA,EAAAA,WAAQ,CAAAC,YAAA,6BAAAC,YAAA,eAARF,CAAQ,gDAK1BD,EAAeC,EAAAA,QAAAA,IAAAA,WAAU,CAAAC,YAAA,0BAAAC,YAAA,eAAVF,CAAU,0F,yDC1G/B,IAfa,SAAH5B,GAAkB,IAAZU,EAAIV,EAAJU,KACd,OACEI,EAAAA,cAAA,WACGJ,GACCA,EAAKP,KAAI,SAAC4B,GACR,OACEjB,EAAAA,cAACkB,EAAG,CAAChB,IAAKe,GACRjB,EAAAA,cAACQ,EAAAA,KAAI,CAACC,GAAE,UAdDU,EAcwBF,EAbpCE,EACJC,MAAM,sEACN/B,KAAI,SAACgC,GAAC,OAAKA,EAAEC,aAAa,IAC1BC,KAAK,OAU4CN,IAdlC,IAACE,CAiBb,IAGR,EAIA,IAAMD,EAAMJ,EAAAA,QAAAA,KAAAA,WAAW,CAAAC,YAAA,YAAAC,YAAA,gBAAXF,CAAW,ojB,oFCGvB,UAzBa,SAAH5B,GAAkB,IACpBE,EADYF,EAAJsC,KACKC,kBAAkBC,MAErC,OACE1B,EAAAA,cAAC2B,EAAAA,EAAM,CAAChC,MAAM,QACZK,EAAAA,cAAC4B,EAAa,KACZ5B,EAAAA,cAAA,UAAI,QAEJA,EAAAA,cAAA6B,EAAA,CAMEpB,GAAG,SACJ,kBAKHT,EAAAA,cAACb,EAAAA,EAAQ,CAACC,MAAOA,IAGvB,EAIA,IAAMwC,EAAgBd,EAAAA,QAAAA,IAAAA,WAAU,CAAAC,YAAA,sBAAAC,YAAA,gBAAVF,CAAU,qHAqC9Be,GAAAf,EAAAA,EAAAA,SAAAN,EAAAA,MAAAsB,WAAA,CAAAf,YAAA,oBAAAC,YAAA,gBAAAF,CAAA,uE","sources":["webpack://gatsby-starter-glass/./src/components/post-list.js","webpack://gatsby-starter-glass/./src/components/tags.js","webpack://gatsby-starter-glass/./src/pages/blog.js"],"sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"gatsby\";\nimport Tags from \"./tags\";\n\nconst PostList = ({ posts }) => {\n  const PostList = posts.map(({ frontmatter, fields, excerpt, timeToRead }) => {\n    const { title, tags, date, description } = frontmatter;\n    const { slug } = fields;\n\n    return (\n      <PostListItem\n        key={slug}\n        tags={tags}\n        title={title}\n        date={date}\n        slug={slug}\n        timeToRead={timeToRead}\n        description={description}\n        excerpt={excerpt}\n      />\n    );\n  });\n\n  return <StyledPostList>{PostList}</StyledPostList>;\n};\n\nexport default PostList;\n\nconst PostListItem = ({\n  title,\n  date,\n  timeToRead,\n  tags,\n  excerpt,\n  description,\n  slug,\n}) => {\n  return (\n    <StyledPostListItem>\n      <Tags tags={tags} />\n\n      <PostListTitle>\n        <Link to={slug}>{title}</Link>\n      </PostListTitle>\n      <PostListExcerpt\n        dangerouslySetInnerHTML={{\n          __html: description || excerpt,\n        }}\n      />\n      <PostListMeta>\n        <span>{date}</span>\n\n        <span>{timeToRead} mins</span>\n      </PostListMeta>\n    </StyledPostListItem>\n  );\n};\n\nconst StyledPostList = styled.ul`\n  padding: 0;\n  list-style: none;\n  display: grid;\n  justify-items: center;\n  grid-gap: var(--size-600);\n  grid-template-columns: repeat(auto-fit, minmax(35ch, 1fr));\n\n  @media screen and (max-width: 500px) {\n    & {\n      display: block;\n    }\n  }\n`;\n\nconst StyledPostListItem = styled.li`\n  display: flex;\n  padding: 1.5rem;\n  border-radius: 8px;\n  position: relative;\n  flex-direction: column;\n  transition: all 0.3s ease-out;\n\n  body.light-mode & {\n    backdrop-filter: blur(10px);\n    border: 1px solid rgba(255, 255, 255, 0.5);\n    background-color: rgba(255, 255, 255, 0.3);\n  }\n\n  body.light-mode &:hover {\n    background-color: rgba(255, 255, 255, 0.5);\n  }\n\n  body.dark-mode & {\n    background-color: #3b3b3c;\n    border: 1px solid #515151;\n  }\n\n  @media screen and (max-width: 500px) {\n    & {\n      margin-top: var(--size-600);\n    }\n  }\n`;\n\nconst PostListTitle = styled.h2`\n  line-height: 1.2;\n  margin-top: 1rem;\n  margin-bottom: 1rem;\n  text-transform: capitalize;\n  font-size: var(--size-600);\n  font-weight: 700;\n\n  & a {\n    text-decoration: none;\n    color: inherit;\n  }\n\n  & a::after {\n    content: \"\";\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n  }\n`;\n\nconst PostListExcerpt = styled.p`\n  margin-top: auto;\n  font-size: var(--size-400);\n`;\n\nconst PostListMeta = styled.div`\n  margin-top: 2rem;\n\n  font-size: var(--size-300);\n  display: flex;\n  justify-content: space-between;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"gatsby\";\n\nconst toKebabCase = (str) => {\n  return str\n    .match(/[A-Z]{2,}(?=[A-Z][a-z]+[0-9]*|\\b)|[A-Z]?[a-z]+[0-9]*|[A-Z]|[0-9]+/g)\n    .map((x) => x.toLowerCase())\n    .join(\"-\");\n};\n\nconst Tags = ({ tags }) => {\n  return (\n    <div>\n      {tags &&\n        tags.map((tag) => {\n          return (\n            <Tag key={tag}>\n              <Link to={`/tags/${toKebabCase(tag)}`}>{tag}</Link>\n            </Tag>\n          );\n        })}\n    </div>\n  );\n};\n\nexport default Tags;\n\nconst Tag = styled.span`\n  margin-right: 0.6rem;\n  margin-bottom: 0.6rem;\n  text-transform: uppercase;\n  font-size: var(--size-300);\n\n  & a {\n    position: relative;\n    z-index: 2;\n    text-decoration: none;\n    color: inherit;\n    padding: 0.2rem 0.6rem;\n    border: 1px solid rgba(255, 255, 255, 1);\n    border-radius: 4px;\n  }\n\n  & a:hover {\n    background-color: rgba(255, 255, 255, 0.9);\n  }\n\n  body.light-mode & a {\n    backdrop-filter: blur(10px);\n    border: 1px solid rgba(255, 255, 255, 0.5);\n    background-color: rgba(255, 255, 255, 0.7);\n  }\n\n  body.light-mode & a:hover {\n    background-color: rgba(255, 255, 255, 1);\n  }\n\n  body.dark-mode & a {\n    background-color: #212122;\n    border: 1px solid #1a1a1b;\n    opacity: 0.8;\n  }\n`;\n","import React from 'react';\nimport { graphql, Link } from 'gatsby';\nimport Layout from '../components/layout';\nimport PostList from '../components/post-list';\nimport styled from 'styled-components';\n\nconst Blog = ({ data }) => {\n  const posts = data.allMarkdownRemark.nodes;\n\n  return (\n    <Layout title=\"Blog\">\n      <HeaderWrapper>\n        <h1>Blog</h1>\n\n        <Link\n          css={`\n            margin-top: var(--size-400);\n            color: inherit;\n            text-transform: uppercase;\n          `}\n          to=\"/tags\"\n        >\n          view all tags\n        </Link>\n      </HeaderWrapper>\n\n      <PostList posts={posts} />\n    </Layout>\n  );\n};\n\nexport default Blog;\n\nconst HeaderWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: var(--size-900);\n  margin-bottom: var(--size-700);\n\n  h1 {\n    max-width: none;\n  }\n`;\n\nexport const homePageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      filter: { fields: { contentType: { eq: \"posts\" } } }\n      sort: { order: DESC, fields: frontmatter___date }\n    ) {\n      nodes {\n        fields {\n          slug\n        }\n        excerpt\n        timeToRead\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          description\n          title\n          tags\n        }\n      }\n    }\n  }\n`;\n"],"names":["_ref","PostList","posts","map","_ref2","frontmatter","fields","excerpt","timeToRead","title","tags","date","description","slug","React","PostListItem","key","StyledPostList","_ref3","StyledPostListItem","Tags","PostListTitle","Link","to","PostListExcerpt","dangerouslySetInnerHTML","__html","PostListMeta","styled","displayName","componentId","tag","Tag","str","match","x","toLowerCase","join","data","allMarkdownRemark","nodes","Layout","HeaderWrapper","_StyledLink","withConfig"],"sourceRoot":""}